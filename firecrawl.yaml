name: firecrawl

services:
  playwright-service:
    image: public.ecr.aws/u3l1p1m5/firecrawl-playwright-service:latest
    environment:
      - PORT=3000
      - PROXY_SERVER=${PROXY_SERVER}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - BLOCK_MEDIA=${BLOCK_MEDIA}
    networks:
      - backend

  api:
    image: public.ecr.aws/u3l1p1m5/firecrawl-api:latest
    environment:
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-3002}
      - WORKER_PORT=${WORKER_PORT:-3005}
      - ENV=production
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
      - REDIS_RATE_LIMIT_URL=${REDIS_RATE_LIMIT_URL:-redis://redis:6379}
      - PLAYWRIGHT_MICROSERVICE_URL=${PLAYWRIGHT_MICROSERVICE_URL:-http://playwright-service:3000/scrape}
      - NUQ_DATABASE_URL=${NUQ_DATABASE_URL}
      - USE_DB_AUTHENTICATION=${USE_DB_AUTHENTICATION}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL}
      - MODEL_NAME=${MODEL_NAME}
      - MODEL_EMBEDDING_NAME=${MODEL_EMBEDDING_NAME}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL}
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - BULL_AUTH_KEY=${BULL_AUTH_KEY}
      - TEST_API_KEY=${TEST_API_KEY}
      - POSTHOG_API_KEY=${POSTHOG_API_KEY}
      - POSTHOG_HOST=${POSTHOG_HOST}
      - SUPABASE_ANON_TOKEN=${SUPABASE_ANON_TOKEN}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_TOKEN=${SUPABASE_SERVICE_TOKEN}
      - SELF_HOSTED_WEBHOOK_URL=${SELF_HOSTED_WEBHOOK_URL}
      - SERPER_API_KEY=${SERPER_API_KEY}
      - SEARCHAPI_API_KEY=${SEARCHAPI_API_KEY}
      - LOGGING_LEVEL=${LOGGING_LEVEL}
      - PROXY_SERVER=${PROXY_SERVER}
      - PROXY_USERNAME=${PROXY_USERNAME}
      - PROXY_PASSWORD=${PROXY_PASSWORD}
      - SEARXNG_ENDPOINT=${SEARXNG_ENDPOINT}
      - SEARXNG_ENGINES=${SEARXNG_ENGINES}
      - SEARXNG_CATEGORIES=${SEARXNG_CATEGORIES}
    depends_on:
      - redis
      - playwright-service
    ports:
      - "${PORT:-3002}:${PORT:-3002}"
    networks:
      - backend

  redis:
    image: redis:alpine
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - backend
    command: redis-server --bind 0.0.0.0

networks:
  backend:
    driver: bridge
